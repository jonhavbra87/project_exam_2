import { useState } from "react";
import { FaEnvelope, FaCalendarAlt, FaPlus, FaBuilding, FaFileAlt, FaLock, FaSignOutAlt, FaChevronRight } from "react-icons/fa";
import { FiSettings } from "react-icons/fi";
import { Link, useNavigate } from "react-router-dom";
import { useAuthStore } from "../../store/authStore";
import Modal from "../../components/Modal"; // âœ… Importer modalen

const ProfilePage = () => {
  const { profile, venueManager, logout } = useAuthStore();
  const navigate = useNavigate();
  const [isModalOpen, setIsModalOpen] = useState(false); // âœ… Modal state

  if (!profile) {
    return <div className="text-center text-gray-500 mt-10">Loading...</div>;
  }

  const sections = [
    venueManager && {
      items: [
        { icon: <FaPlus />, title: "Add a Venue", description: "Create and list a new venue.", link: "/profile/venues/create" },
        { icon: <FaBuilding />, title: "My Venues", description: "Manage your listed venues.", link: "/venues" },
      ],
    },
    {
      items: [
        { icon: <FaEnvelope />, title: "Messages", description: "Check your inbox.", link: "/messages" },
        { icon: <FaCalendarAlt />, title: "My Bookings", description: "View your bookings.", link: "/profile/bookings" },
        { icon: <FiSettings />, title: "Edit Profile", description: "Update your profile.", link: "/profile/editprofile" },
        { icon: <FaFileAlt />, title: "Terms of Service", description: "Review our terms.", link: "/terms" },
        { icon: <FaLock />, title: "Privacy Guidelines", description: "Learn about data privacy.", link: "/privacy" },
        {
          icon: <FaSignOutAlt />,
          title: "Logout",
          description: "Securely log out.",
          onClick: () => {
            logout();
            navigate("/");
          },
        },
      ],
    },
  ].filter(Boolean);

  return (
    <div className="w-full min-h-screen">
      {/* ðŸ“Œ HERO BANNER */}
      <div className="relative w-full h-48 md:h-64">
        <img
          src={profile?.banner?.url || "https://via.placeholder.com/1200x300"}
          alt={profile?.banner?.alt || "Banner"}
          className="w-full h-full object-cover"
        />
      </div>

      {/* ðŸ“Œ PROFILE CARD */}
      <div className="relative mx-auto -mt-14 md:-mt-20 bg-white shadow-lg rounded-lg p-6 max-w-lg md:max-w-2xl text-center">
        <div className="flex flex-col items-center">
          <img
            src={profile?.avatar?.url || "https://via.placeholder.com/150"}
            alt={profile?.avatar?.alt || "User avatar"}
            className="w-24 h-24 md:w-32 md:h-32 rounded-full border object-cover"
          />
          <h2 className="text-body-large-desktop text-text-primary font-bold mt-2">{profile?.name}</h2>

          {/* ðŸ”¹ Venue Manager Status */}
          <p 
            className={`mt-2 p-4 text-white rounded ${
              venueManager ? "bg-secondary" : "bg-header"
            }`}
          >
            {venueManager ? "You are a Venue Manager" : "Not a Venue Manager"}
          </p>

          {/* ðŸ”¹ Open Modal Button */}
          <button
            onClick={() => setIsModalOpen(true)}
            className="mt-4 w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600"
          >
            Open Profile Settings
          </button>
        </div>
      </div>

      {/* ðŸ“Œ Profile Sections */}
      <div className="container mx-auto mt-10 px-4">
        <div className="grid grid-cols-1 md:grid-cols-auto-fit gap-6">
          {sections.map((section, index) => (
            <div key={index}>
              {section && (
                <div className="grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-auto-fit">
                  {section.items.map((item, i) => {
                    const Component = item.link ? Link : "button";
                    return (
                      <Component
                        key={i}
                        to={item.link || "#"}
                        onClick={item.onClick}
                        className={`flex items-center justify-between gap-4 p-4 bg-white rounded-lg shadow-lg hover:bg-gray-100 transition-all ${
                          item.link ? "" : "text-red-600"
                        }`}
                      >
                        <div className="flex items-center gap-4">
                          <div className="text-xl">{item.icon}</div>
                          <div className="text-left">
                            <h3 className="text-body-large-mobile md:text-body-large-desktop font-medium mb-2">
                              {item.title}
                            </h3>
                            <p className="text-body-medium-mobile md:text-body-medium-desktop text-text-secondary text-sm hidden sm:block">
                              {item.description}
                            </p>
                          </div>
                        </div>
                        <FaChevronRight className="text-gray-400 sm:hidden" />
                      </Component>
                    );
                  })}
                </div>
              )}
            </div>
          ))}
        </div>
      </div>

      {/* ðŸ“Œ Modal */}
      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} title="Profile Settings">
        <p>This is a profile settings modal.</p>
      </Modal>
    </div>
  );
};

export default ProfilePage;
